name: Feature branch Delete

on:
  workflow_call:
    inputs:
      repository_name:
        description: 'caller repository name'
        required: false
        type: string
      branch_name:
        description: 'name branch to delete'
        required: true
        type: string
      github_run_id:
        required: false
        type: string
      github_actor:
        required: false
        type: string
    secrets:
      tf_api_token:
        description: 'trerraform access token'
        required: true
      slack_webhook:
        description: 'slack webhook url'
        required: false

env:
  TF_IN_AUTOMATION: "1"
  TF_INPUT: "0"

jobs:
  delete:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tf_api_token }}
          terraform_wrapper: false
          terraform_version: "~1.0"

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: iac

      - name: Cache Terraform
        uses: actions/cache@v2
        with:
          path: iac/.terraform
          key: ${{ hashFiles('iac/.terraform.lock.hcl') }}


      - name: Set vars
        id: vars
        run: |

          APP_RELEASE="dev"
          PARAM_SPACE="dev"

          APP_BRANCH=${{ inputs.branch_name }}

          echo "APP_RELEASE=$APP_RELEASE"
          echo "REF_SLUG=$REF_SLUG"
          echo "APP_BRANCH=$APP_BRANCH"

          echo "::set-output name=tag::$APP_RELEASE"
          echo "::set-output name=ref_slug::$REF_SLUG"
          echo "::set-output name=app_branch::$APP_BRANCH"
          echo "::set-output name=param_space::$PARAM_SPACE"

      - name: Terraform Init
        run: |
          echo  "tag          =\"${{steps.vars.outputs.tag}}\""  >  terraform.auto.tfvars
          echo  "app_release  =\"${{steps.vars.outputs.tag}}\""  >>  terraform.auto.tfvars
          echo  "app_branch   =\"${{steps.vars.outputs.app_branch}}\""  >>  terraform.auto.tfvars
          echo  "param_space  =\"${{steps.vars.outputs.param_space}}\""  >>  terraform.auto.tfvars
          terraform workspace select ${{steps.vars.outputs.app_branch}}
          terraform init
        working-directory: iac

      - name: Terraform Apply
        env:
          TF_VAR_tag:          ${{ needs.vars.outputs.tag }}
          TF_VAR_app_branch:   ${{ needs.vars.outputs.app_branch }}
          TF_VAR_param_space:  ${{ needs.vars.outputs.param_space }}

        run: |
          terraform apply -destroy  -auto-approve
          terraform workspace select dev
          terraform workspace delete -force ${{steps.vars.outputs.app_branch}}

        working-directory: iac

      - name: Slack Notification
        if: ${{secrets.slack_webhook}}
        env:
          SLACK_USER: "${{ inputs.repository_name }}[${{ needs.vars.outputs.app_branch }}]"
        run: |
          curl -fsS \
            -X POST \
            -H 'content-type: application/json' \
             "${{ secrets.slack_webhook }}" \
            -d '{"channel": "#ci-cd", "username": "'"$SLACK_USER"'", "text": "Feature branch service deleted ${{ needs.vars.outputs.app_release }}\n<${{ github.server_url }}/${{ inputs.repository_name }}/actions/runs/${{ inputs.github_run_id }}>\nTriggered by: @${{ inputs.github_actor }}", "icon_emoji": ":recycle:"}'
