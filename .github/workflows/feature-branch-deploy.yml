name: Feature branch Deploy

on:
  workflow_call:
    inputs:
      branch_name:
        description: 'name branch to deploy'
        required: true
        type: string
    secrets:
      tf_api_token:
        description: 'trerraform access token'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TF_VAR_app_release:  ${{ needs.vars.outputs.app_release }}
      TF_VAR_tag:          ${{ needs.vars.outputs.app_release }}
      TF_VAR_app_branch:   ${{ needs.vars.outputs.app_branch }}
      TF_VAR_param_space:  ${{ needs.vars.outputs.param_space }}
      TF_WORKSPACE: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tf_api_token }}
          terraform_wrapper: false
          terraform_version: "~1.0"

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: iac

      - name: Cache Terraform
        uses: actions/cache@v2
        with:
          path: iac/.terraform
          key: ${{ hashFiles('iac/.terraform.lock.hcl') }}

      - name: Set vars
        id: vars
        run: |

          APP_RELEASE="dev"

          if [ "${{ github.ref }}" = 'refs/heads/master' ]; then
            APP_BRANCH="dev"
            PARAM_SPACE="dev"
          elif [ "${{ github.ref }}" = 'refs/heads/iac' ]; then
            APP_BRANCH="dev"
            PARAM_SPACE="dev"
          else
            APP_BRANCH="dev"
            PARAM_SPACE="dev"
          fi

          APP_BRANCH=${{ inputs.branch_name }}

          echo "APP_RELEASE=$APP_RELEASE"
          echo "REF_SLUG=$REF_SLUG"
          echo "APP_BRANCH=$APP_BRANCH"

          echo "::set-output name=tag::$APP_RELEASE"
          echo "::set-output name=tf_workspace::$TF_WORKSPACE"
          echo "::set-output name=ref_slug::$REF_SLUG"
          echo "::set-output name=app_branch::$APP_BRANCH"
          echo "::set-output name=param_space::$PARAM_SPACE"

      - name: Terraform Init
        run: |
          echo  "tag          =\"${{steps.vars.outputs.tag}}\""  >  terraform.auto.tfvars
          echo  "app_release  =\"${{steps.vars.outputs.tag}}\""  >>  terraform.auto.tfvars
          echo  "app_branch  =\"${{steps.vars.outputs.app_branch}}\""  >>  terraform.auto.tfvars
          echo  "param_space  =\"${{steps.vars.outputs.param_space}}\""  >>  terraform.auto.tfvars
          terraform init -migrate-state
          unset TF_WORKSPACE
          terraform workspace select dev
          terraform workspace select ${{steps.vars.outputs.app_branch}} || terraform workspace new ${{steps.vars.outputs.app_branch}}
          terraform init
        working-directory: iac

      - name: Terraform Validate
        run: terraform validate
        working-directory: iac

      - name: check
        run: |
          echo "TF_VAR_tag=${{steps.vars.outputs.tag}}"
          echo "TF_VAR_app_branch=${{steps.vars.outputs.app_branch}}"
          TF_WORKSPACE="${{steps.vars.outputs.app_branch}}"
          env

      - name: Terraform Apply
        env:
          TF_WORKSPACE: ${{steps.vars.outputs.app_branch}}

        run: terraform apply -auto-approve
        working-directory: iac

